/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.iesiliberis.crudcentroeducativo.formularios;

import com.iesiliberis.crudcentroeducativo.ControladorDAO.CursoDaoImp;
import com.iesiliberis.crudcentroeducativo.ControladorDAO.aulaDaoImp;
import com.iesiliberis.crudcentroeducativo.ControladorDAO.personalDaoImp;
import com.iesiliberis.crudcentroeducativo.ControladorDAO.unidadDaoImp;
import com.iesiliberis.crudcentroeducativo.entidades.aula;
import com.iesiliberis.crudcentroeducativo.entidades.personal;
import com.iesiliberis.crudcentroeducativo.entidades.unidad;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Raúl
 */
public class frmUnidad extends javax.swing.JFrame {
    int idcurso;
    /**
     * Creates new form frmCurso
     */
    public frmUnidad(int id) throws SQLException {
        initComponents();
        configtabla();
        idcurso=id;
        cargatabla();
    }
    public frmUnidad() {
        
    }
    private void configtabla(){
        String col[]={"ID","CODIGO","NOMBRE","OBSERVACIONES","CURSO","TUTOR","AULA"};
        jtUnidades.getModel();
        DefaultTableModel mode = new DefaultTableModel(col,0){
                @Override
                public boolean isCellEditable(int row,int column){
                    return false;
                }
        };
        jtUnidades.setModel(mode);
        
        
        
            
        
    }
    private void cargatabla() throws SQLException{
        DefaultTableModel modelo = (DefaultTableModel)jtUnidades.getModel();
        modelo.setNumRows(0);
        
        CursoDaoImp curs=CursoDaoImp.getInstance();
        unidadDaoImp unidad=unidadDaoImp.getInstance();
        List<unidad> unidades= curs.getunidades(this.idcurso);
        String [] fila = new String [7];
            for (unidad un:unidades){
                fila[0]=""+String.valueOf(un.getId());
                fila[1]=""+un.getCodigo();
                fila[2]=""+un.getNombre();
                fila[3]=""+un.getObservaciones();
                personalDaoImp personal = personalDaoImp.getInstance();
                aulaDaoImp aul = aulaDaoImp.getInstance();
                if (curs.getById(un.getIdcurso())==null){
                    fila[4]="no tiene";
                }
                else {
                    fila[4]=""+curs.getById(un.getIdcurso()).getCodigo();
                }
                if (personal.getById(un.getIdtutor())==null){
                    fila[5]="no tiene";
                }
                else {
                    fila[5]=""+personal.getById(un.getIdtutor()).getDni();
                }
                if (aul.getById(un.getIdaula())==null){
                    fila[6]="no tiene";
                }
                else {
                    fila[6]=""+aul.getById(un.getIdaula()).getCodigo();
                }
                
                modelo.addRow(fila);
            }
            //txtidcurso.setText(String.valueOf(idcurso));
            }
        
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtUnidades = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtbuscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtObservaciones = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTutor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtaula = new javax.swing.JTextField();
        btnañadir = new javax.swing.JButton();
        btnborrar = new javax.swing.JButton();
        btnactualizar = new javax.swing.JButton();
        btnAulas = new javax.swing.JButton();
        btnTutores = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtUnidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtUnidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtUnidadesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtUnidades);

        jLabel1.setText("Buscar");

        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbuscarKeyPressed(evt);
            }
        });

        jLabel2.setText("Codigo");

        txtcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodigoActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre");

        jLabel4.setText("Observaciones");

        jLabel5.setText("Tutor");

        jLabel6.setText("Aula");

        btnañadir.setText("Añadir");
        btnañadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnañadirActionPerformed(evt);
            }
        });

        btnborrar.setText("Borrar");
        btnborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnborrarActionPerformed(evt);
            }
        });

        btnactualizar.setText("Actualizar");
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });

        btnAulas.setText("Aulas");
        btnAulas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAulasActionPerformed(evt);
            }
        });

        btnTutores.setText("Tutores");
        btnTutores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTutoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTablaLayout = new javax.swing.GroupLayout(pnlTabla);
        pnlTabla.setLayout(pnlTablaLayout);
        pnlTablaLayout.setHorizontalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTablaLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(pnlTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTablaLayout.createSequentialGroup()
                        .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtObservaciones))
                        .addGap(33, 33, 33)
                        .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTutor, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtaula, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlTablaLayout.createSequentialGroup()
                        .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(pnlTablaLayout.createSequentialGroup()
                                .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(btnañadir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnborrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnactualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAulas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTutores)))
                        .addGap(0, 32, Short.MAX_VALUE))))
        );
        pnlTablaLayout.setVerticalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtaula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnañadir)
                    .addComponent(btnborrar)
                    .addComponent(btnactualizar)
                    .addComponent(btnAulas)
                    .addComponent(btnTutores)
                    .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnlTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodigoActionPerformed

    private void btnañadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnañadirActionPerformed
        unidadDaoImp uni=unidadDaoImp.getInstance();
        int contperson=0;
        int contaul=0;
        List <personal> person = null;
        List <aula> aulas = null;
        int fila = jtUnidades.getSelectedRow();
        personalDaoImp tut = personalDaoImp.getInstance();
        aulaDaoImp aul = aulaDaoImp.getInstance();
        String id=String.valueOf(jtUnidades.getValueAt(fila, 0));
        unidad un= new unidad(idcurso,txtcodigo.getText(),txtnombre.getText(),txtObservaciones.getText(),idcurso);
        try {
            person=tut.getAll();
            aulas=aul.getAll();
        } catch (SQLException ex) {
            Logger.getLogger(frmUnidad.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            for (personal persona:person){
                if (persona.getDni().equals(txtTutor.getText())){
                    un.setIdtutor(persona.getId());
                }
                else {
                    contperson++;
                }
            }
            if (contperson==person.size()) {
                JOptionPane.showMessageDialog(this,"el tutor insertado no es correcto");
            }
            for (aula au:aulas){
                if (au.getCodigo().equals(txtaula.getText())){
                    un.setIdaula(au.getId());
                }
                else {
                    contaul++;
                }
            }
            if (contaul==aulas.size()){
                JOptionPane.showMessageDialog(this,"el aula insertada es incorrecta");
            }
            if (txtcodigo.getText().equals("") || txtnombre.getText().equals("")){
                JOptionPane.showMessageDialog(this,"le faltan campos por introducir");
            } else {
                if (contaul<aulas.size() && contperson<person.size()){
                uni.add(un);
                cargatabla();
                txtcodigo.setText("");
                txtnombre.setText("");
                txtObservaciones.setText("");
                txtTutor.setText("");
                txtaula.setText("");
            }
                else {
                JOptionPane.showMessageDialog(this,"El Registro no fue insertado porque el aula o el tutor son incorrectos");
                }
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(frmUnidad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnañadirActionPerformed

    private void btnborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnborrarActionPerformed
        int fila = jtUnidades.getSelectedRow();
        String id = String.valueOf(jtUnidades.getValueAt(fila, 0));
        unidadDaoImp uni=unidadDaoImp.getInstance();
        try {
            uni.delete(Integer.parseInt(id));
            cargatabla();
        } catch (SQLException ex) {
            System.out.println("Error" + ex.getMessage());;
        }
    }//GEN-LAST:event_btnborrarActionPerformed

    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed
        int contperson=0;
        int contaul=0;
        List <personal> person = null;
        List <aula> aulas = null;
        int fila = jtUnidades.getSelectedRow();
        personalDaoImp tut = personalDaoImp.getInstance();
        aulaDaoImp aul = aulaDaoImp.getInstance();
        String id=String.valueOf(jtUnidades.getValueAt(fila, 0));
        unidadDaoImp uni=unidadDaoImp.getInstance();
        unidad un= new unidad(Integer.parseInt(id),txtcodigo.getText(),txtnombre.getText(),txtObservaciones.getText(),idcurso);
        try {
            person=tut.getAll();
            aulas=aul.getAll();
        } catch (SQLException ex) {
            Logger.getLogger(frmUnidad.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            for (personal persona:person){
                if (persona.getDni().equals(txtTutor.getText())){
                    un.setIdtutor(persona.getId());
                }
                else {
                    contperson++;
                }
            }
            if (contperson==person.size()) {
                JOptionPane.showMessageDialog(this,"el tutor insertado no es correcto");
            }
            for (aula au:aulas){
                if (au.getCodigo().equals(txtaula.getText())){
                    un.setIdaula(au.getId());
                }
                else {
                    contaul++;
                }
            }
            if (contaul==aulas.size()){
                JOptionPane.showMessageDialog(this,"el aula insertada es incorrecta");
            }
            if (contaul<aulas.size() && contperson<person.size()){
                uni.update(un);
            }
            else {
                JOptionPane.showMessageDialog(this,"El Registro no fue actualizado porque el aula o el tutor son incorrectos");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(frmUnidad.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            cargatabla();
            txtcodigo.setText("");
            txtnombre.setText("");
            txtObservaciones.setText("");
            txtTutor.setText("");
            txtaula.setText("");
        } catch (SQLException ex) {
            System.out.println("error" + ex.getMessage());
        }
    }//GEN-LAST:event_btnactualizarActionPerformed

    private void jtUnidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtUnidadesMouseClicked

        int fila = jtUnidades.getSelectedRow();
        txtcodigo.setText(String.valueOf(jtUnidades.getValueAt(fila, 1)));
        txtnombre.setText(String.valueOf(jtUnidades.getValueAt(fila, 2)));
        txtObservaciones.setText(String.valueOf(jtUnidades.getValueAt(fila, 3)));
        txtTutor.setText(String.valueOf(jtUnidades.getValueAt(fila, 5)));
        txtaula.setText(String.valueOf(jtUnidades.getValueAt(fila, 6)));
         if (evt.getClickCount()==2){
            
            int idseleccion=Integer.parseInt(jtUnidades.getValueAt(jtUnidades.getSelectedRow(), 0).toString());
            frmMatriculas mat;
            try {
                mat = new frmMatriculas(idseleccion);
                mat.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(frmUnidad.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jtUnidadesMouseClicked

    private void txtbuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyPressed
               if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            DefaultTableModel modelo = (DefaultTableModel) jtUnidades.getModel();
            TableRowSorter<TableModel> trsorter= new TableRowSorter(modelo);
            jtUnidades.setRowSorter(trsorter);
            if (txtbuscar.getText().length()==0){
                trsorter.setRowFilter(null);
            }else{
                trsorter.setRowFilter(RowFilter.regexFilter(txtbuscar.getText().trim()));
            }
            
        }
    }//GEN-LAST:event_txtbuscarKeyPressed

    private void btnAulasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAulasActionPerformed
        frmAulas aulas;
        try {
            aulas = new frmAulas();
            aulas.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(frmUnidad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAulasActionPerformed

    private void btnTutoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTutoresActionPerformed
        frmTutores tutor;
        try {
            tutor = new frmTutores();
            tutor.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(frmUnidad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTutoresActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmUnidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmUnidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmUnidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmUnidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmUnidad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAulas;
    private javax.swing.JButton btnTutores;
    private javax.swing.JButton btnactualizar;
    private javax.swing.JButton btnañadir;
    private javax.swing.JButton btnborrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtUnidades;
    private javax.swing.JPanel pnlTabla;
    private javax.swing.JTextField txtObservaciones;
    private javax.swing.JTextField txtTutor;
    private javax.swing.JTextField txtaula;
    private javax.swing.JTextField txtbuscar;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
}
